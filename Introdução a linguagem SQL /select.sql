-- Active: 1674308238455@@127.0.0.1@3306@teste

# aula : 4. Usando o comando SELECT
SHOW TABLES;
SELECT * FROM `AREA`;
SELECT * FROM `FUN`;
SELECT DEPTNUM,NOME,SALARIO FROM `FUN`;
SELECT * FROM FUN WHERE DEPTNUM = 10;
SELECT * FROM FUN WHERE DEPTNUM = 20;
SELECT * FROM FUN WHERE DEPTNUM = 10 OR COMISSAO IS NOT NULL OR SALARIO <= 2000 AND DEPTNUM = 20;
SELECT * FROM FUN WHERE (DEPTNUM = 10 OR COMISSAO IS NOT NULL OR SALARIO <= 2000 ) AND DEPTNUM = 20;

# aula : 5. Usando o comando SELECT - parte2
SELECT SALARIO, COMISSAO FROM FUN;
SELECT SALARIO as Ganhos, COMISSAO as Bonus FROM FUN;
SELECT SALARIO as GANHOS, COMISSAO as BONUS FROM FUN WHERE COMISSAO < 5000;
SELECT * FROM ( SELECT SALARIO as GANHOS, COMISSAO as BONUS FROM FUN) X WHERE BONUS < 5000;
SELECT * FROM ( SELECT SALARIO as GANHOS, COMISSAO as BONUS FROM FUN) X WHERE GANHOS < 5000;
SELECT NOME,CARGO FROM FUN WHERE DEPTNUM = 10;
SELECT CONCAT(NOME, ' CARGO as C ', CARGO) as MSG FROM FUN WHERE DEPTNUM = 10;
SELECT CONCAT(NOME, ' - ', CARGO) as MSG FROM FUN WHERE DEPTNUM = 10;

SELECT NOME,SALARIO, 
CASE 
  WHEN SALARIO <= 2000 THEN 'BAIXO'
  WHEN SALARIO >= 4000 THEN 'ALTO'
  ELSE 'MEDIO'
END AS RESULTADO
FROM FUN;

# aula : 6. Usando o comando SELECT - parte3

SELECT * FROM `FUN` LIMIT 5;
SELECT NOME, CARGO FROM FUN ORDER BY RAND() LIMIT 5;
SELECT * FROM FUN WHERE COMISSAO IS NULL;
SELECT * FROM FUN WHERE COMISSAO IS NOT NULL;
SELECT COALESCE(COMISSAO,0) FROM FUN;

# aula : 7 Usando ORDER BY

SELECT NOME,CARGO,SALARIO FROM FUN WHERE DEPTNUM = 10 ORDER BY SALARIO DESC;
SELECT NOME,CARGO,SALARIO FROM FUN WHERE DEPTNUM = 10 ORDER BY NOME DESC;
SELECT NOME,CARGO,SALARIO FROM FUN WHERE DEPTNUM = 10 ORDER BY 1 DESC;
SELECT NOME,CARGO,SALARIO FROM FUN WHERE DEPTNUM = 10 ORDER BY 2 DESC;
SELECT NOME,CARGO,SALARIO FROM FUN WHERE DEPTNUM = 10 ORDER BY 3 DESC;

SELECT NOME, SALARIO, COMISSAO, CASE WHEN COMISSAO IS NULL THEN 0 ELSE 1 END AS IS_NULL FROM FUN ORDER BY IS_NULL;

SELECT NOME, SALARIO, COMISSAO FROM (
  SELECT NOME, SALARIO, COMISSAO, CASE WHEN COMISSAO IS NULL THEN 0 ELSE 1 END AS IS_NULL FROM FUN
) x ORDER BY IS_NULL;

# aula : 8 Junções de tabelas

SELECT NOME,DEPTNUM FROM FUN WHERE DEPTNUM = 10
UNION ALL
SELECT '--------------', NULL FROM TABELA1
UNION ALL 
SELECT NOME, DEPTNUM FROM AREA;


SELECT DEPTNUM FROM FUN 
UNION
SELECT DEPTNUM FROM AREA;

SELECT DEPTNUM FROM FUN 
UNION ALL
SELECT DEPTNUM FROM AREA;

SELECT f.NOME, a.CIDADE FROM FUN as f, AREA as a
WHERE f.DEPTNUM = a.DEPTNUM AND
      f.DEPTNUM = 10;

SELECT f.NOME, a.CIDADE, f.DEPTNUM as FUN_DEPTNUM, a.DEPTNUM as AREA_DEPTNUM FROM FUN as f, AREA as a
WHERE f.DEPTNUM = 10;


# aula : 9 Trabalhando com multiplas tabelas

SELECT DEPTNUM FROM AREA 
WHERE DEPTNUM NOT IN ( SELECT DEPTNUM FROM FUN);

SELECT DISTINCT DEPTNUM FROM AREA 
WHERE DEPTNUM NOT IN ( SELECT DEPTNUM FROM FUN);

SELECT NOME, COMISSAO, COALESCE(COMISSAO, 0)  FROM FUN  WHERE COALESCE(COMISSAO, 0) < ( SELECT COMISSAO FROM FUN WHERE NOME = 'WALDIR') ORDER BY COMISSAO;

# aula : 11 Trabalhando com strings

SELECT (LENGTH('TESTE1,TESTE2,TESTE1') - LENGTH( REPLACE('TESTE1,TESTE2,TESTE1', ',', '')))/LENGTH(',') as Virgula;

SELECT (LENGTH('TESTE1,TESTE2,TESTE1') - LENGTH( REPLACE('TESTE1,TESTE2,TESTE1', ',', ''))) as Virgula;

SELECT LENGTH(',');

set TESTE 10;
SELECT NOME FROM FUN WHERE DEPTNUM = 10;


SELECT NOME FROM FUN ORDER BY SUBSTR(NOME, LENGTH(NOME) - 1);
SELECT SUBSTR(NOME, 1) FROM FUN ORDER BY SUBSTR(NOME, LENGTH(NOME) - 1);
SELECT LENGTH(NOME) FROM FUN ORDER BY SUBSTR(NOME, LENGTH(NOME) - 1);
SELECT * FROM `FUN`;
SELECT COUNT(*) FROM `FUN` GROUP BY DEPTNUM;

SELECT DEPTNUM, GROUP_CONCAT(NOME ORDER BY FUNNUM SEPARATOR ',') as Colaborador FROM FUN GROUP BY DEPTNUM;
SELECT DEPTNUM, GROUP_CONCAT(NOME ORDER BY FUNNUM SEPARATOR ',') as Colaborador FROM FUN